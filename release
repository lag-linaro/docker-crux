#!/bin/bash

set -e

usage()
{
    echo -e "\nUsage: $0 <build|commit|test> <VERSION>"
    exit 1
}

fetcharch()
{
    if [ -x /usr/bin/arch -o -x /bin/arch ]; then
	ARCH=`arch`
	return
    fi

    if [ -x /usr/bin/uname -o -x /bin/uname ]; then
	ARCH=`uname -m`
	return
    fi

    if [ "$ARCH" == "" ]; then
	echo "$0 uses 'arch' or 'uname' which appear to be missing"
	exit 1
    fi
}

buildrootfs()
{
    case "${ARCH}" in
	x86_64)
	    url="http://ftp.morpheus.net/pub/linux/crux/latest/iso/crux-${VERSION}.iso"

	    if docker ps -a | grep -q cruxbuild; then
		docker rm -f cruxbuild > /dev/null
	    fi

	    docker build -t cruxbuild build/${VERSION}/x86_64

	    docker run \
		   -i -t --privileged \
		   --name cruxbuild \
		   -e URL=${url} \
		   -e VERSION=${VERSION} \
		   cruxbuild

	    docker cp cruxbuild:/buildenv/rootfs.tar.xz build/${VERSION}/x86_64
	    docker rm -f cruxbuild
	    ;;

	aarch64)
	    ./build/${VERSION}/aarch64/crux-fetch.sh ${VERSION}
	    ;;
    esac
}

committobranch()
{
    if git show-ref --verify --quiet refs/heads/${VERSION}-${ARCH}; then
	git branch -D ${VERSION}-${ARCH}
    fi

    case "${ARCH}" in
	x86_64)
	    git checkout -b ${VERSION} origin/dist

	    git add rootfs.tar.xz
	    git commit -m "${VERSION}"

	    docker build -t crux:${VERSION} .
	    ;;

	aarch64)
	    docker build -t cruxbuild build/${VERSION}/aarch64
	    ;;
    esac;
}

testing()
{
    case "${ARCH}" in
	x86_64)
	    docker build -t cruxbuild build/${VERSION}/x86_64

	    docker run \
		   -i -t --privileged \
		   --name cruxbuild \
		   -e VERSION=${VERSION} \
		   -v $(pwd)/media:/mnt/media \
		   cruxbuild

	    docker cp cruxbuild:/rootfs.tar.xz .
	    docker import - test < rootfs.tar.xz
	    docker rm -f cruxbuild
	    ;;

	aarch64)
	    ./build/${VERSION}/aarch64/crux-fetch.sh ${VERSION}

	    docker build -t cruxbuild build/${VERSION}/aarch64
	    ;;
	esac
}

main() {
    fetcharch

    if [ $# -ne 2 ]; then
	echo "$0 requires exactly 2 arguments"
	usage
    fi

    VERSION=$2

    if ! echo $VERSION | grep -E '^[0-9]+[.][0-9]+$' > /dev/null; then
	echo "<VERSION> should be in the format <MAJOR>.<MINOR>"
	usage
    fi

    # TODO: Add more options (commit, push, etc)
    case "$1" in
	build)
	    buildrootfs "$@"
	    ;;
	commit)
	    committobranch "$@"
	    ;;
        test)
	    testing "$@"
	    ;;
        *)
	    echo "Unrecognised argument $1"
	    ;;
    esac
}

main "$@"
